name: Pull Request To Develop

on:
  pull_request:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Check if there was changes in alembic directory
      - name: Get changed files in the alembic folder
        id: changed-files-alembic
        uses: tj-actions/changed-files@v37
        with:
          files: alembic/**  # Alternatively using: `alembic` or `alembic/*`
          files_ignore: alembic/versions/README*  # Optionally ignore files
        

      - name: Set up Python
        uses: actions/setup-python@v3.1.4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build and and docker container
      
        run: |
          echo -e "URL=${{ secrets.DEV_DB_URL }}\nSECRET_TOKEN==${{ secrets.DEV_SECRET_TOKEN }}" > ./app/.env
          docker build -t app .
          docker run -d -p 8001:8001 app

      # if there was a change in alembic directory, run alembic upgrade head
      - name: Alembic upgrade if there was changes in alembic directory
        id: alembic-upgrade
        if: ${{ steps.changed-files-alembic.outputs.any_changed == 'true' }}
        run: |
          echo -e "URL=${{ secrets.DEV_DB_URL }}\nSECRET_TOKEN==${{ secrets.DEV_SECRET_TOKEN }}" > ./app/.env
          alembic upgrade head


      - name: Run pytest
        if: ${{ steps.alembic-upgrade.outputs.exit_code == 0 }}
        run: |
          pytest


      - name: Alembic Downgrade if tests Failed and there was changes in alembic directory
        continue-on-error: true
        if: ${{ failure() && steps.changed-files-alembic.outputs.any_changed == 'true' }}
        run: |
          echo -e "URL=${{ secrets.DEV_DB_URL }}\nSECRET_TOKEN==${{ secrets.DEV_SECRET_TOKEN }}" > ./app/.env
          alembic downgrade -1

      - name: Send custom JSON data to Slack workflow
        continue-on-error: true
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK